1. Se requiere modelar un puente de un solo sentido, el puente solo soporta el peso de 5
unidades de peso. Cada auto pesa 1 unidad, cada camioneta pesa 2 unidades y cada camión
3 unidades. Suponga que hay una cantidad innumerable de vehículos (A autos, B
camionetas y C camiones).
a. Realice la solución suponiendo que todos los vehículos tienen la misma prioridad.
b. Modifique la solución para que tengan mayor prioridad los camiones que el resto de los
vehículos.

a.

PROCEDURE puente IS

TASK TYPE autos; 
auto: ARRAY(1..A) OF autos;
TASK TYPE camionetas;
camioneta: ARRAY(1..B) OF camioneta;
TASK TYPE camiones;
caimon: ARRAY(1..C) OF camiones;

TASK admin IS
    ENTRY pedidoA;
    ENTRY pedidoB;
    ENTRY pedidoC;
    ENTRY liberarA;
    ENTRY liberarB;
    ENTRY liberarC;
END admin;

TASK BODY autos IS
BEGIN
    admin.pedidoA;
    //pasar
    admin.liberarA;
END autos;

TASK BODY camionetas IS
BEGIN
    admin.pedidoB;
    //pasar
    admin.liberarB;
END camineta;

TASK BODY camiones IS
BEGIN
    admin.pedidoC;
    //pasar
    admin.liberarC;
END camiones;

TASK BODY admin IS
    pesoDisp:integer;
BEGIN
    pesoDisp:=5;
    LOOP
        SELECT
            ACCEPT liberarA;
            pesoDisp++;
        OR
            ACCEPT liberarB;
            pesoDisp+=2;
        OR
            ACCEPT liberarC;
            pesoDisp+=3;
        OR
            WHEN (pesoDisp>0) => ACCEPT pedidoA;
            pesoDisp--;
        OR
            WHEN (pesoDisp>1) => ACCEPT pedidoB;
            pesoDisp-=2;
        OR
            WHEN (pesoDisp>2) => ACCEPT pedidoC;
            pesoDisp-=3;
        END SELECT;
    END LOOP;
END admin;

BEGIN 
    null;
END puente;


================================================================================================================================================================================================
b.
a.

PROCEDURE puente IS

TASK TYPE autos; 
auto: ARRAY(1..A) OF autos;
TASK TYPE camionetas;
camioneta: ARRAY(1..B) OF camioneta;
TASK TYPE camiones;
caimon: ARRAY(1..C) OF camiones;

TASK admin IS
    ENTRY pedidoA;
    ENTRY pedidoB;
    ENTRY pedidoC;
    ENTRY liberarA;
    ENTRY liberarB;
    ENTRY liberarC;
END admin;

TASK BODY autos IS
BEGIN
    admin.pedidoA;
    //pasar
    admin.liberarA;
END autos;

TASK BODY camionetas IS
BEGIN
    admin.pedidoB;
    //pasar
    admin.liberarB;
END camineta;

TASK BODY camiones IS
BEGIN
    admin.pedidoC;
    //pasar
    admin.liberarC;
END camiones;

TASK BODY admin IS
    pesoDisp:integer;
BEGIN
    pesoDisp:=5;
    LOOP
        SELECT
            ACCEPT liberarA;
            pesoDisp++;
        OR
            ACCEPT liberarB;
            pesoDisp+=2;
        OR
            ACCEPT liberarC;
            pesoDisp+=3;
        OR
            WHEN (pesoDisp>0)&&(pedidoC'count = 0) => ACCEPT pedidoA;
            pesoDisp--;
        OR
            WHEN (pesoDisp>1)&&(pedidoC'count = 0) => ACCEPT pedidoB;
            pesoDisp-=2;
        OR
            WHEN (pesoDisp>2) => ACCEPT pedidoC;
            pesoDisp-=3;
        END SELECT;
    END LOOP;
END admin;

BEGIN 
    null;
END puente;
