4. Simular la atención en un locutorio con 10 cabinas telefónicas, que tiene un empleado que
se encarga de atender a los clientes. Hay N clientes que al llegar esperan hasta que el
empleado les indica a que cabina ir, la usan y luego se dirigen al empleado para pagarle. El
empleado atiende a los clientes en el orden en que hacen los pedidos, pero siempre dando
prioridad a los que terminaron de usar la cabina. Nota: maximizar la concurrencia; suponga
que hay una función Cobrar() llamada por el empleado que simula que el empleado le cobra
al cliente.

chan solicitud(int);
chan confirmacion[1..N](int);
chan pagar(int);


process cliente[id:1..N]{
    int Cid;
    send solicitud(id);
    receive confirmacion[id](Cid);
    //usar cabina Cid
    send pagar(Cid);
}

process empleado{
    int Pid,Cid;
    cola c = {1,2,3,4,5,6,7,8,9,10};
    int libres = 10;
    while(true){
        if (empty(pagar) and (libre>0) and not empty(solicitud)) -> receive solicitud(Pid);
                                                                    pop(c,Cid);
                                                                    send confirmacion[Pid](Cid);
                                                                    libres--;
        ▯ (not empty(pagar)) ->    receive pagar(Cid)
                                    Cobrar();
                                    push(c,Cid);
                                    libres++;
        end if;
    }
}