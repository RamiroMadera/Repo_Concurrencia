3. Se tiene un curso con 40 alumnos, la maestra entrega una tarea distinta a cada alumno, luego
cada alumno realiza su tarea y se la entrega a la maestra para que la corrija, esta revisa la tarea
y si está bien le avisa al alumno que puede irse, si la tarea está mal le indica los errores, el
alumno corregirá esos errores y volverá a entregarle la tarea a la maestra para que realice la
corrección nuevamente, esto se repite hasta que la tarea no tenga errores.

sem eCor[N] = ([N] 0);
sem eLis = 0;
bool eBien[40]= false;
sen mutex = 1,mutex2=1;
cola c;
int fin=40;

process alumno [id: 0..39]{
  while (! eBien[id]){
    //resolver examen
    P(mutex);
    encolar(c,id);
    V(mutex);
    V(eLis);
    P(eCor[id]);
  }
  P(mutex2);
  fin--;
  V(mutex2);
}

process maestra {
  int aux;
  P(mutex2);
  while (fin != 0){
    V(mutex2);
    P(eLis);
    P(mutex);
    desencolar(c,aux);
    V(mutex);
    // corrijo
    if (esta bien){
      eBien[aux]= true;
    } else {
      / /escribir correciones;
    }
    V(eCor[aux]);
    P(mutex2);
  }
  V(mutex2);
}

a
CORRECCIONES:
1) Usar variable local en lugar de eList
2) Antes de la resolucion del examen, la maestra tiene que entregar examenes (tareas actually) DIFERENTES a cada alumno (como?? No me acuerdo)

sem eCor[N] = ([N] 0);
sem eLis = 0;
sem entrega[N] = ([N] 0);
bool eBien[40]= false;
sen mutex = 1,mutex2=1;
cola c;
text tarea[40];

process alumno [id: 0..39]{
  P(entrega[i]);

  while (! eBien[id]){
    P(entrega[i]);
    //resolver examen
    P(mutex);
    encolar(c,id);
    V(mutex);
    V(eLis);
    P(eCor[id]);
  }
}

process maestra {
  for (i = 0..39){
    tarea[i]= asignarRandom();
    V(entrega[i]);
  }

  int fin=40;
  int aux;
  while (fin != 0){
    P(eLis);
    P(mutex);
    desencolar(c,aux);
    V(mutex);
    // corrijo
    if (esta bien){
      eBien[aux]= true;
      fin--;
    } else {
      / /escribir correciones;
    }
    V(eCor[aux]);
  }
}
