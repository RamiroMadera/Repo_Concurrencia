7. Se debe simular una maratón con C corredores donde en la llegada hay UNA máquinas
expendedoras de agua con capacidad para 20 botellas. Además existe un repositor
encargado de reponer las botellas de la máquina. Cuando los C corredores han llegado al
inicio comienza la carrera. Cuando un corredor termina la carrera se dirigen a la máquina
expendedora, espera su turno (respetando el orden de llegada), saca una botella y se retira. Si
encuentra la máquina sin botellas, le avisa al repositor para que cargue nuevamente la
máquina con 20 botellas; espera a que se haga la recarga; saca una botella y se retira. Nota:
maximizar la concurrencia; mientras se reponen las botellas se debe permitir que otros
corredores se encolen.


Process corredor[id: 0..C-1]{
    Maquina.esperar();
    Maquina.acceder();
    Maquina.tomarAgua();
    Maquina.salir();
}

Process repositor{
    while(1){
        Maquina.reponerAgua();
    }
}


Monitor Maquina{
    cola c;
    cond espera[C];
    cond sinc;
    int listos = 0;
    bool libre = true;
    int cantBotellas = 20;
    cond repositor, esperarBotellas;

    Procedure esperar(){
        listos++;
        if (listos == C)
            signal_all(sinc);
        else
            wait(sinc);
    }

    Procedure acceder(){
        if (libre){
            libre = false;
        } else {
            push(c,id);
            wait(espera[id]);
        }
    }


    Procedure salir(){
        int aux;
        if (empty(c)){
            libre = true;
        } else {
            pop(c,aux);
            signal(espera[aux]);
        }
    }

    Procedure tomarAgua(){
        while (cantBotellas == 0){
            signal(repositor);
            wait(esperarBotellas);
        }

        //tomar agua
        cantBotellas--;
    }

    Procedure reponerAgua(){
        wait(repositor);
        if(cantBotellas == 0){
            cantBotellas = 20;
            signal_all(esperarBotellas);
        }
    }
}