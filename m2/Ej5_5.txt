5. En un sistema para acreditar carreras universitarias, hay UN Servidor que atiende pedidos
de U Usuarios de a uno a la vez y de acuerdo al orden en que se hacen los pedidos. Cada
usuario trabaja en el documento a presentar, y luego lo envía al servidor; espera la respuesta
del mismo que le indica si está todo bien o hay algún error. Mientras haya algún error vuelve
a trabajar con el documento y a enviarlo al servidor. Cuando el servidor le responde que
está todo bien el usuario se retira. Cuando un usuario envía un pedido espera a lo sumo 2
minutos a que sea recibido por el servidor, pasado ese tiempo espera un minuto y vuelve a
intentarlo (usando el mismo documento).

PROCEDURE SIMGuanari;                                                                                                                                                                                                                                               O SIMGarangi

TASK TYPE usuarios;
TASK servidor IS
    ENTRY enviar(doc: IN text; bien: OUT boolean);
END servidor;

usuario: ARRAY(1..U) OF usuarios;

TASK BODY usuarios IS
    b,enviado:boolean;
    d:text;
BEGIN
    b:=false;
    while(b=false) loop
        trabajar(d);
        enviado:=false;
        while(enviado=false) loop
            SELECT
                servidor.enviar(d,b);
                enviado:=true;
            OR DELAY 2min
                delay(1min);
            END SELECT;
        end loop;
    end loop;
END usuarios;

TASK BODY servidor IS
BEGIN
    LOOP
        ACCEPT enviar(doc: IN text; bien: OUT boolean) DO
            bien = resolver(doc)    //devuelve true si el doc está bien, false en cc
        END enviar;
    END LOOP;
END servidor;

BEGIN
    null;
END SIMGuanari;